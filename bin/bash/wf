#!/bin/bash
# wifi manager by netctl utility
# by randomowo

device=$(ip link | grep -oE 'w\w+')

on() {
	off > /dev/null
	ipDown
	list=($(netctl list | sort))
	echo "Choose network:"
	for (( netIndex=0; netIndex<${#list[@]}; netIndex++ )); do
		echo -e "\t$netIndex ${list[$netIndex]}"
	done
	read -p "Network: " netInd
	if [[ ! $netInd =~ ^[0-9]+$ ]] || (( $netInd+1 > ${#list[@]} )); then
		echo "wrong input"
		exit 1
	fi
	ping=$((sudo netctl start "${list[netInd]}") 2>&1)
	if [[ ! -z "$ping" ]]; then
		echo "Can not connect to ${list[netInd]}"
		read -p "Try another? [y/n]" -s -n 1 -r try
		echo
		case $try in
			"y"|"Y")
				on;;
			*)
				exit 1;;
		esac
	else
		echo "${list[netInd]}" | sudo tee /var/local/wf_last > /dev/null
		echo "Successfully connected to ${list[netInd]}"
	fi
}

off() {
	sudo netctl stop-all
	ipUp
	echo "wifi turned off"
}

last() {
	off > /dev/null	
	ipDown
	if [[ -f /var/local/wf_last ]]; then
		nw=$(cat /var/local/wf_last)
		ping=$((sudo netctl start $nw) 2>&1)
		if [[ ! -z $ping ]]; then
			echo "Can not connect to $nw"
			exit 1
		else
			sudo netctl start $nw
			echo "Successfully connected to $nw"
		fi
	else
		echo "Can not find last network name"
		exit 1
	fi
}

ipDown() {
	ipstat=$(ip link | grep -E "$device.*" | grep -oE "UP|DOWN" | sed -n 1p)
	if [[ $ipstat == "UP" ]]; then sudo ip link set dev $device down; fi
}

ipUp() {
	sudo ip link set dev "$device" up
}

ipRes() {
	ipDown
	ipUp
}

new() {
	off > /dev/null	
	ipDown
	sudo wifi-menu
}

reset() {
	sudo rmmod brcmfmac
	sudo modprobe brcmfmac
}

help() {
	echo "Usage: wf [OPTION]"
	echo -e "Wifi manager\n"
	echo "OPTIONS:"
	echo -e " on\t\tconnect to already registered networks"
	echo -e " off\t\tdisconnet from all networks"
	echo -e " new\t\tregister new network"
	echo -e " res, restart\trestart driver"
	echo -e " last\t\tconnect to last connected network"
	echo -e " help\t\tshow this help\n"
	echo "by randomowo (randomowo@ya.ru)"
	echo "For any questions write to me directly"
}

case $1 in
	"on")
		ipRes
		on;;
	"off")
		ipDown
		off;;
	"new")
		new;;
	"res"|"restart")
		reset
		ipDown;;
	"last")
		last;;
	"help")
		help;;
	*)
		help;;
esac

exit 0
