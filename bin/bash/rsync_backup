#!/bin/bash

backup_folder="/mnt/backup/$(date +%Y-%m-%d)"
# change to your disk model (mine Backup+ RD)
backup_disk="$(sudo fdisk -l | xargs | grep -oE 'Backup\+\ RD.*' | grep -oE '/dev/sd..')"

if [[ "$backup_disk" == "" ]]; then
    echo "Disk not connected"
    exit 1
else
    echo "Disk connected"
fi

if [[ "$(df -ah | grep -o $backup_disk)" == "" ]]; then
    sudo mount $backup_disk /mnt
fi
echo "Disk $backup_disk mounted"

echo "Calculating needed size"
need_size=$(sudo rsync -r --dry-run --stats -e --exclude={\
"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/media/*","/lost+found",\
"$HOME/.cache/*","$HOME/Downloads/*"} / $backup_folder \
| grep "Total transferred file size:" | grep -oE "[0-9,]++" | tr -d ',')

have_size=$(df /mnt | sed -n 2p | xargs | tr ' ' '\n'| sed -n 4p | grep -oE "[0-9]+")

while (( $(echo "($need_size/1000) * 1.5 > $have_size" | bc -l) )); do
    oldest=/mnt/backup/$(ls -t /mnt/backup | sort | sed -n 1p)
    sudo rm -rf $oldest
    echo "$oldest deleted for freeing disk space"
    have_size=$(df -h /mnt | sed -n 2p | xargs | tr ' ' '\n'| sed -n 4p | grep -oE "[0-9]*")
done

if [[ ! -d $backup_folder ]]; then
    sudo mkdir $backup_folder
    echo "Folder $backup_folder created"
else
    echo "Folder $backup_folder already exist"
fi

files_count=$(sudo rsync -r --dry-run --stats --human-readable -e --exclude={\
"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/media/*","/lost+found",\
"$HOME/.cache/*","$HOME/Downloads/*"} / $backup_folder | grep -oE "transferred:.*" | grep -oE "[0-9].*" | tr -d ,)
let files_count+=5

sudo rsync -aAXrv --delete -e --exclude={\
"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/media/*","/lost+found",\
"$HOME/.cache/*","$HOME/Downloads/*"} / $backup_folder | pv -pteabl -s $files_count > /dev/null

echo "System backuped"

sudo umount /mnt
echo "Disk $backup_disk unmounted"

exit 0
