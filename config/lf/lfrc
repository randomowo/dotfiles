# sets
set shell zsh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set previewer '~/.config/lf/scope'

# mappings
map <enter> shell
map x $$f
map X !$f

map o &mimeopen $f
map O $mimeopen --ask $f

cmd open &{{
    case $(file --mime-type -Lb $f) in
        inode/x-empty | text/* | application/json) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
map r push :rename<space>

# define a custom 'delete' command
# cmd delete ${{
#     set -f
#     printf "$fx\n"
#     printf "delete?[y/n]"
#     read ans
#     [ "$ans" = "y" ] && rm -rf $fx
# }}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

map d delete
map H set hidden!

cmd touch ${{
    set -f
    touch $1
}}
map N push :touch<space>

map Y cut

